name: Maven Release

# Performs a Maven release using JDK 11 when a new GitHub release has been published
on:
  release:
    types: [ published ]

jobs:
  publish:
    name: Maven Artifact Publisher (JDK 17)
    runs-on: ubuntu-latest
    env:
      AUTORELEASE_ARTIFACT: ${{ secrets.AUTORELEASE_ARTIFACT }}
      SKIP_JAR_DEPLOYMENT: ${{ secrets.SKIP_JAR_DEPLOYMENT }}
    steps:
      - name: Check out source code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          lfs: true

      - name: Checkout LFS objects
        run: git lfs checkout

      - name: Install JDK 17
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4.2.1
        with:
          cache: maven
          distribution: 'temurin'
          java-version: 17
          server-id: ossrh-s01
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      # If running locally in act, install Maven
      - name: Set up Maven if needed
        if: ${{ env.ACT }}
        uses: stCarolas/setup-maven@07fbbe97d97ef44336b7382563d66743297e442f # v4.5
        with:
          maven-version: 3.8.6

      - name: Set autorelease config
        if: env.AUTORELEASE_ARTIFACT == null
        run: echo "AUTORELEASE_ARTIFACT=false" >> $GITHUB_ENV

      - name: Set Jar deployment config
        if: env.SKIP_JAR_DEPLOYMENT == null
        run: echo "SKIP_JAR_DEPLOYMENT=false" >> $GITHUB_ENV

      - name: Optionally, login to Docker repository
        uses: docker/login-action@f3364599c6aa293cdc2b8391b1b56d0c30e45c8a # v1.8.0
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        if: env.DOCKER_USERNAME != null
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install local dependencies
        uses: samuelmeuli/action-maven-publish@201a45a3f311b2ee888f252ba9f4194257545709 # v1.4.0
        with:
          maven_goals_phases: "validate"
          maven_args: -V -ntp -Dorg.slf4j.simpleLogger.log.net.sourceforge.pmd=error

      - name: Release with Maven
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.BUILD_PASSPHRASE }}
          MAVEN_GPG_KEY: ${{ secrets.BUILD_KEY }}
        run: |
          mvn -B -ntp -Prelease clean deploy -Dautorelease.artifact=${{ env.AUTORELEASE_ARTIFACT }} \
          -DskipNexusStagingDeployMojo=${{ env.SKIP_JAR_DEPLOYMENT }} -DlogLevel=DEBUG -DtestLogLevel=DEBUG \
          -Drevision=${{ github.event.release.tag_name }} -Ddocker.showLogs=true \
          -Ddocker.username=${{ secrets.DOCKER_USERNAME }} -Ddocker.password=${{ secrets.DOCKER_PASSWORD }}

      - name: Publish Jar Artifact to S3
        uses: jakejarvis/s3-sync-action@be0c4ab89158cac4278689ebedd8407dd5f35a83 # v0.5.1
        with:
          args: >
            --acl public-read --follow-symlinks --exclude '*'
            --include "cantaloupe-auth-delegate-${{ github.event.release.tag_name }}.jar"
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-west-2"
          SOURCE_DIR: "target"
          DEST_DIR: "cantaloupe-delegate/"
